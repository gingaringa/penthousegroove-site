name: QA Manual Dispatch (fresh)

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  TZ: Asia/Tokyo

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      # QAブランチの中身で処理
      - uses: actions/checkout@v4
        with:
          ref: qa

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      # ① daily を取り込み（recommend.json に反映）
      - name: Ingest (no commit)
        run: node scripts/ingest-today.mjs

      # ② updates.json（recommend.message）更新
      - name: Update updates.json (no commit)
        run: node scripts/update-updates-json.mjs

      # ③ updates.json の recommend.lastUpdate を “今日かそれ以前の最新日付” に自動更新
      - name: Bump updates.json lastUpdate (auto)
        run: |
          python - <<'PY'
          import json,glob,io,re,datetime
          files = glob.glob('content/daily/*.json')
          dates=[]
          for p in files:
            m=re.search(r'(\d{4}-\d{2}-\d{2})\.json$', p)
            if m: dates.append(m.group(1))
          today=datetime.date.today().isoformat()
          dates=[d for d in dates if d<=today]
          if not dates: raise SystemExit(0)
          latest=max(dates).replace('-','')
          path='public/updates.json'
          d=json.load(io.open(path,encoding='utf-8'))
          if (d.get('recommend') or {}).get('lastUpdate')!=latest:
            d.setdefault('recommend',{})['lastUpdate']=latest
            with io.open(path,'w',encoding='utf-8') as f:
              json.dump(d,f,ensure_ascii=False,indent=2)
          print('lastUpdate ->', latest)
          PY

      # ④ HTML 生成
      - name: Generate pages
        working-directory: public
        run: node generate-recommend-pages.js

      # ⑤ AWS 認証
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # ⑥ S3(QA) へ同期（必要ファイルのみ）
      - name: Sync to QA S3
        env: { QA_BUCKET: ${{ secrets.S3_BUCKET_QA }} }
        run: |
          aws s3 sync public "s3://${QA_BUCKET}/" --delete \
            --exclude "*" \
            --include "recommend.json" \
            --include "updates.json" \
            --include "recommend.html" \
            --include "recommend_pages/*"

      # ⑦ CloudFront(QA) 最小無効化
      - name: Invalidate QA CloudFront (targeted)
        env: { QA_CF_ID: ${{ secrets.CF_DISTRIBUTION_ID_QA }} }
        run: |
          L=$(TZ=Asia/Tokyo date +%F)
          aws cloudfront create-invalidation \
            --distribution-id "$QA_CF_ID" \
            --paths "/updates.json" "/recommend.json" "/recommend_pages/recommend-${L}.html"

      # ⑧ 反映チェック（軽め）
      - name: Wait until CloudFront shows new lastUpdate
        run: |
          set -e
          WANT=$(python - <<'PY'
          import json; print((json.load(open('public/updates.json')).get('recommend') or {}).get('lastUpdate',''))
          PY
          )
          URL="https://d1xxonlnsg0phc.cloudfront.net/updates.json?ts=$(date +%s)"
          for i in $(seq 1 12); do
            CUR=$(curl -fSs "$URL" | python - <<'PY'
          import sys,json; print((json.load(sys.stdin).get('recommend') or {}).get('lastUpdate',''))
          PY
          )
            echo "try#$i want=$WANT got=$CUR"
            [ "$CUR" = "$WANT" ] && exit 0
            sleep 8
          done
          exit 0

      # ⑨ QA LINE 通知（シークレットがあれば実行）
      - name: Trigger QA notify
        if: ${{ secrets.QA_NOTIFY_URL != '' && secrets.QA_NOTIFY_TOKEN != '' }}
        run: |
          curl -fSs -X POST "${{ secrets.QA_NOTIFY_URL }}/admin/notify-send?token=${{ secrets.QA_NOTIFY_TOKEN }}"
