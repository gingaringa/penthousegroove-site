name: QA Manual Dispatch (safe)

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  TZ: Asia/Tokyo

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: qa

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Ingest (full rebuild)
        run: node scripts/ingest-today.mjs

      - name: Update updates.json (no commit)
        run: node scripts/update-updates-json.mjs

      - name: Bump updates.json lastUpdate (auto)
        run: |
          python - <<'PY'
          import json,glob,io,re,datetime
          files = glob.glob('content/daily/*.json')
          dates=[]
          for p in files:
            m=re.search(r'(\d{4}-\d{2}-\d{2})\.json$', p)
            if m: dates.append(m.group(1))
          today=datetime.date.today().isoformat()
          dates=[d for d in dates if d<=today]
          if not dates: raise SystemExit(0)
          latest=max(dates).replace('-','')
          path='public/updates.json'
          d=json.load(io.open(path,encoding='utf-8'))
          if (d.get('recommend') or {}).get('lastUpdate')!=latest:
            d.setdefault('recommend',{})['lastUpdate']=latest
            with io.open(path,'w',encoding='utf-8') as f:
              json.dump(d,f,ensure_ascii=False,indent=2)
          print('lastUpdate ->', latest)
          PY

      - name: Generate pages
        working-directory: public
        run: node generate-recommend-pages.js

      - name: Commit artifacts back to QA
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A public
          git commit -m "ci(qa): auto-update artifacts (manual $(date -u +%F))" || echo "no changes"
          git push origin HEAD:qa

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Sync to QA S3
        env: { QA_BUCKET: ${{ secrets.S3_BUCKET_QA }} }
        run: |
          aws s3 sync public "s3://${QA_BUCKET}/" --delete \
            --exclude "*" \
            --include "recommend.json" \
            --include "updates.json" \
            --include "recommend.html" \
            --include "recommend_pages/*"

      - name: Invalidate QA CloudFront (targeted)
        env: { QA_CF_ID: ${{ secrets.CF_DISTRIBUTION_ID_QA }} }
        run: |
          L=$(TZ=Asia/Tokyo date +%F)
          aws cloudfront create-invalidation \
            --distribution-id "$QA_CF_ID" \
            --paths "/updates.json" "/recommend.json" "/recommend.html" "/recommend_pages/recommend-${L}.html"

      - name: Trigger QA notify
        if: ${{ secrets.QA_NOTIFY_URL != '' && secrets.QA_NOTIFY_TOKEN != '' }}
        run: |
          curl -fSs -X POST "${{ secrets.QA_NOTIFY_URL }}/admin/notify-send?token=${{ secrets.QA_NOTIFY_TOKEN }}"
