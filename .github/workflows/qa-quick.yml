name: QA Quick Deploy
on:
  workflow_dispatch:
permissions:
  contents: write
env:
  TZ: Asia/Tokyo
jobs:
  qa-quick:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: qa
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Rebuild recommend.json (full)
        run: node scripts/rebuild-recommend.mjs
      - name: Filter recommend.json to <= today (JST)
        run: |
          node - <<'JS'
          const fs=require('fs');
          const p='public/recommend.json';
          const raw=JSON.parse(fs.readFileSync(p,'utf8'));
          const items=Array.isArray(raw)?raw:(raw.items||[]);
          const today=new Date().toISOString().slice(0,10);
          const out={items: items.filter(x => (x.date||'') <= today)};
          fs.writeFileSync(p, JSON.stringify(out,null,2));
          JS
      - name: Generate pages
        working-directory: public
        run: node generate-recommend-pages.js
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}
      - name: Sync to QA S3
        env:
          QA_BUCKET: ${{ secrets.S3_BUCKET_QA }}
        run: |
          aws s3 sync public "s3://${QA_BUCKET}/" --delete \
            --exclude "*" \
            --include "recommend.json" \
            --include "updates.json" \
            --include "recommend.html" \
            --include "recommend_pages/*"
      - name: Invalidate QA CloudFront
        if: ${{ secrets.CF_DISTRIBUTION_ID_QA != '' }}
        env:
          QA_CF_ID: ${{ secrets.CF_DISTRIBUTION_ID_QA }}
        run: |
          L=$(TZ=Asia/Tokyo date +%F)
          aws cloudfront create-invalidation --distribution-id "$QA_CF_ID" \
            --paths "/updates.json" "/recommend.json" "/recommend_pages/recommend-${L}.html"
      - name: Trigger QA notify
        if: ${{ secrets.QA_NOTIFY_URL != '' && secrets.QA_NOTIFY_TOKEN != '' }}
        run: |
          curl -fSs -X POST "${{ secrets.QA_NOTIFY_URL }}/admin/notify-send?token=${{ secrets.QA_NOTIFY_TOKEN }}"
